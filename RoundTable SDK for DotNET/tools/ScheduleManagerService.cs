//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ScheduleManagerSoapBinding", Namespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Account))]
public class ScheduleManagerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public ScheduleManagerService() {
        this.Url = "http://localhost:8080/ProjectServer/services/ScheduleManager";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("addScheduleReturn")]
    public int addSchedule(Schedule schedule) {
        object[] results = this.Invoke("addSchedule", new object[] {
                    schedule});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddSchedule(Schedule schedule, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addSchedule", new object[] {
                    schedule}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndaddSchedule(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    public void dropSchedule(int scheduleId) {
        this.Invoke("dropSchedule", new object[] {
                    scheduleId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindropSchedule(int scheduleId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("dropSchedule", new object[] {
                    scheduleId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddropSchedule(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    public void modifySchedule(Schedule schedule) {
        this.Invoke("modifySchedule", new object[] {
                    schedule});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmodifySchedule(Schedule schedule, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("modifySchedule", new object[] {
                    schedule}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndmodifySchedule(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getScheduleReturn")]
    public Schedule getSchedule(int scheduleId) {
        object[] results = this.Invoke("getSchedule", new object[] {
                    scheduleId});
        return ((Schedule)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSchedule(int scheduleId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSchedule", new object[] {
                    scheduleId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Schedule EndgetSchedule(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Schedule)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getAllSchedulesForProjectReturn")]
    public Schedule[] getAllSchedulesForProject(int projectId) {
        object[] results = this.Invoke("getAllSchedulesForProject", new object[] {
                    projectId});
        return ((Schedule[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllSchedulesForProject(int projectId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllSchedulesForProject", new object[] {
                    projectId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Schedule[] EndgetAllSchedulesForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Schedule[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("addCommentForScheduleReturn")]
    public int addCommentForSchedule(Schedule schedule, Comment comment) {
        object[] results = this.Invoke("addCommentForSchedule", new object[] {
                    schedule,
                    comment});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddCommentForSchedule(Schedule schedule, Comment comment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addCommentForSchedule", new object[] {
                    schedule,
                    comment}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndaddCommentForSchedule(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getCommentsForScheduleReturn")]
    public Comment[] getCommentsForSchedule(Schedule schedule) {
        object[] results = this.Invoke("getCommentsForSchedule", new object[] {
                    schedule});
        return ((Comment[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCommentsForSchedule(Schedule schedule, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCommentsForSchedule", new object[] {
                    schedule}, callback, asyncState);
    }
    
    /// <remarks/>
    public Comment[] EndgetCommentsForSchedule(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Comment[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("addCommentForScheduleItemReturn")]
    public int addCommentForScheduleItem(ScheduleItem scheduleItem, Comment comment) {
        object[] results = this.Invoke("addCommentForScheduleItem", new object[] {
                    scheduleItem,
                    comment});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddCommentForScheduleItem(ScheduleItem scheduleItem, Comment comment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addCommentForScheduleItem", new object[] {
                    scheduleItem,
                    comment}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndaddCommentForScheduleItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scheduleManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ScheduleManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getCommentsForScheduleItemReturn")]
    public Comment[] getCommentsForScheduleItem(ScheduleItem scheduleItem) {
        object[] results = this.Invoke("getCommentsForScheduleItem", new object[] {
                    scheduleItem});
        return ((Comment[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCommentsForScheduleItem(ScheduleItem scheduleItem, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCommentsForScheduleItem", new object[] {
                    scheduleItem}, callback, asyncState);
    }
    
    /// <remarks/>
    public Comment[] EndgetCommentsForScheduleItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Comment[])(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Schedule", "http://www.dommoni.com/ROUNDTABLE")]
public class Schedule {
    
    /// <remarks/>
    public int accessMode;
    
    /// <remarks/>
    public Comment[] comments;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public ScheduleItem[] scheduleItems;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Comment", "http://www.dommoni.com/ROUNDTABLE")]
public class Comment {
    
    /// <remarks/>
    public string comment;
    
    /// <remarks/>
    public string context;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int objectId;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Account", "http://www.dommoni.com/ROUNDTABLE")]
public class Account {
    
    /// <remarks/>
    public int accountType;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public string nickName;
    
    /// <remarks/>
    public string password;
    
    /// <remarks/>
    public string profile;
    
    /// <remarks/>
    public string username;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("ScheduleItem", "http://www.dommoni.com/ROUNDTABLE")]
public class ScheduleItem {
    
    /// <remarks/>
    public Comment[] comments;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public System.Single duration;
    
    /// <remarks/>
    public System.DateTime endDate;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int ordinal;
    
    /// <remarks/>
    public int percentComplete;
    
    /// <remarks/>
    public int priority;
    
    /// <remarks/>
    public Account[] resources;
    
    /// <remarks/>
    public System.DateTime startDate;
    
    /// <remarks/>
    public string title;
}
