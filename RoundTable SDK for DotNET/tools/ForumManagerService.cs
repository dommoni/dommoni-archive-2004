//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ForumManagerSoapBinding", Namespace="http://localhost:8080/ProjectServer/services/ForumManager")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BinaryAttachment))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingNoteItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingFollowupItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingAgendaItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(DiscussionMessage))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NotificationContextObject))]
public class ForumManagerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public ForumManagerService() {
        this.Url = "http://localhost:8080/ProjectServer/services/ForumManager";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://forumManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ForumManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("addForumReturn")]
    public int addForum(Forum forum) {
        object[] results = this.Invoke("addForum", new object[] {
                    forum});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddForum(Forum forum, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addForum", new object[] {
                    forum}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndaddForum(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://forumManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ForumManager")]
    public void dropForum(int forumId) {
        this.Invoke("dropForum", new object[] {
                    forumId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindropForum(int forumId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("dropForum", new object[] {
                    forumId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddropForum(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://forumManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ForumManager")]
    public void modifyForum(Forum forum) {
        this.Invoke("modifyForum", new object[] {
                    forum});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmodifyForum(Forum forum, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("modifyForum", new object[] {
                    forum}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndmodifyForum(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://forumManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ForumManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getForumReturn")]
    public Forum getForum(int forumId) {
        object[] results = this.Invoke("getForum", new object[] {
                    forumId});
        return ((Forum)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetForum(int forumId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getForum", new object[] {
                    forumId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Forum EndgetForum(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Forum)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://forumManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ForumManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getAllForumsForProjectReturn")]
    public Forum[] getAllForumsForProject(int projectId) {
        object[] results = this.Invoke("getAllForumsForProject", new object[] {
                    projectId});
        return ((Forum[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllForumsForProject(int projectId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllForumsForProject", new object[] {
                    projectId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Forum[] EndgetAllForumsForProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Forum[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://forumManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ForumManager")]
    public void addForumReply(ForumReply forumReply) {
        this.Invoke("addForumReply", new object[] {
                    forumReply});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddForumReply(ForumReply forumReply, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addForumReply", new object[] {
                    forumReply}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddForumReply(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://forumManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ForumManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getAllRepliesForForumReturn")]
    public ForumReply[] getAllRepliesForForum(int forumId) {
        object[] results = this.Invoke("getAllRepliesForForum", new object[] {
                    forumId});
        return ((ForumReply[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllRepliesForForum(int forumId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllRepliesForForum", new object[] {
                    forumId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ForumReply[] EndgetAllRepliesForForum(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ForumReply[])(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Forum", "http://www.dommoni.com/ROUNDTABLE")]
public class Forum : NotificationContextObject {
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string message;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public string subject;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("NotificationContextObject", "http://roundtable.dommoni.com")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Task))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Document))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Forum))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Meeting))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Discussion))]
public abstract class NotificationContextObject {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("ForumReply", "http://www.dommoni.com/ROUNDTABLE")]
public class ForumReply {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public int forumId;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string reply;
    
    /// <remarks/>
    public System.DateTime timestamp;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("TaskReminder", "http://www.dommoni.com/ROUNDTABLE")]
public class TaskReminder {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int[] recipients;
    
    /// <remarks/>
    public System.DateTime reminderTime;
    
    /// <remarks/>
    public int taskId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("TaskStatus", "http://www.dommoni.com/ROUNDTABLE")]
public class TaskStatus {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("BinaryAttachment", "http://www.dommoni.com/ROUNDTABLE")]
public class BinaryAttachment {
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
    public System.Byte[] attachment;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public string notes;
    
    /// <remarks/>
    public string objectContext;
    
    /// <remarks/>
    public int objectId;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("MeetingNoteItem", "http://www.dommoni.com/ROUNDTABLE")]
public class MeetingNoteItem {
    
    /// <remarks/>
    public BinaryAttachment[] attachments;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int meetingId;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("MeetingFollowupItem", "http://www.dommoni.com/ROUNDTABLE")]
public class MeetingFollowupItem {
    
    /// <remarks/>
    public int ordinal;
    
    /// <remarks/>
    public string text;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("MeetingAgendaItem", "http://www.dommoni.com/ROUNDTABLE")]
public class MeetingAgendaItem {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string notes;
    
    /// <remarks/>
    public int ordinal;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("DiscussionMessage", "http://www.dommoni.com/ROUNDTABLE")]
public class DiscussionMessage {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string messageText;
    
    /// <remarks/>
    public System.DateTime timestamp;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Task", "http://www.dommoni.com/ROUNDTABLE")]
public class Task : NotificationContextObject {
    
    /// <remarks/>
    public int assignedTo;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public TaskStatus currentStatus;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public System.DateTime dueDate;
    
    /// <remarks/>
    public int flag;
    
    /// <remarks/>
    public bool isPublic;
    
    /// <remarks/>
    public System.DateTime lastModified;
    
    /// <remarks/>
    public int percentComplete;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public System.DateTime startDate;
    
    /// <remarks/>
    public TaskReminder taskReminder;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Document", "http://www.dommoni.com/ROUNDTABLE")]
public class Document : NotificationContextObject {
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
    public System.Byte[] document;
    
    /// <remarks/>
    public int documentType;
    
    /// <remarks/>
    public string filename;
    
    /// <remarks/>
    public int ownerId;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Meeting", "http://www.dommoni.com/ROUNDTABLE")]
public class Meeting : NotificationContextObject {
    
    /// <remarks/>
    public MeetingAgendaItem[] agendaItems;
    
    /// <remarks/>
    public int[] attendees;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public System.DateTime endTime;
    
    /// <remarks/>
    public MeetingFollowupItem[] followupItems;
    
    /// <remarks/>
    public MeetingNoteItem[] meetingNotes;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public bool sendInvitation;
    
    /// <remarks/>
    public System.DateTime startTime;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Discussion", "http://www.dommoni.com/ROUNDTABLE")]
public class Discussion : NotificationContextObject {
    
    /// <remarks/>
    public System.DateTime date;
    
    /// <remarks/>
    public int[] memberIds;
    
    /// <remarks/>
    public DiscussionMessage[] messages;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public string title;
}
