//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="SessionManagerSoapBinding", Namespace="http://localhost:8080/ProjectServer/services/SessionManager")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Session))]
public class SessionManagerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public SessionManagerService() {
        this.Url = "http://localhost:8080/ProjectServer/services/SessionManager";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://sessionManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/SessionManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getActiveSessionsReturn")]
    public Session[] getActiveSessions() {
        object[] results = this.Invoke("getActiveSessions", new object[0]);
        return ((Session[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetActiveSessions(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getActiveSessions", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public Session[] EndgetActiveSessions(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Session[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://sessionManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/SessionManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getSessionReturn")]
    public string getSession(string userName, string password, int sessionType, string ipAddress) {
        object[] results = this.Invoke("getSession", new object[] {
                    userName,
                    password,
                    sessionType,
                    ipAddress});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSession(string userName, string password, int sessionType, string ipAddress, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSession", new object[] {
                    userName,
                    password,
                    sessionType,
                    ipAddress}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetSession(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute(MessageName="getSession1")]
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://sessionManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/SessionManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getSessionReturn")]
    public string getSession(string userName, string password, int type) {
        object[] results = this.Invoke("getSession1", new object[] {
                    userName,
                    password,
                    type});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSession1(string userName, string password, int type, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSession1", new object[] {
                    userName,
                    password,
                    type}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetSession1(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://sessionManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/SessionManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getAccountForSessionReturn")]
    public Account getAccountForSession(string sessionId) {
        object[] results = this.Invoke("getAccountForSession", new object[] {
                    sessionId});
        return ((Account)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAccountForSession(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAccountForSession", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Account EndgetAccountForSession(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Account)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://sessionManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/SessionManager")]
    public void closeSession(string sessionId) {
        this.Invoke("closeSession", new object[] {
                    sessionId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincloseSession(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("closeSession", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndcloseSession(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://sessionManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/SessionManager")]
    public void setCurrentProjectForSession(string _sessionId, Project project) {
        this.Invoke("setCurrentProjectForSession", new object[] {
                    _sessionId,
                    project});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetCurrentProjectForSession(string _sessionId, Project project, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setCurrentProjectForSession", new object[] {
                    _sessionId,
                    project}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetCurrentProjectForSession(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Session", "http://www.dommoni.com/ROUNDTABLE")]
public class Session {
    
    /// <remarks/>
    public Account account;
    
    /// <remarks/>
    public Project currentProject;
    
    /// <remarks/>
    public System.DateTime endTime;
    
    /// <remarks/>
    public System.DateTime lastActivityTime;
    
    /// <remarks/>
    public string remoteIPAddress;
    
    /// <remarks/>
    public string sessionId;
    
    /// <remarks/>
    public System.DateTime startTime;
    
    /// <remarks/>
    public int type;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Account", "http://www.dommoni.com/ROUNDTABLE")]
public class Account {
    
    /// <remarks/>
    public int accountType;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public string nickName;
    
    /// <remarks/>
    public string password;
    
    /// <remarks/>
    public string profile;
    
    /// <remarks/>
    public string username;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Project", "http://www.dommoni.com/ROUNDTABLE")]
public class Project {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public Account[] members;
    
    /// <remarks/>
    public string name;
}
