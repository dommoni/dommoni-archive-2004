//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="CommentManagerSoapBinding", Namespace="http://localhost:8080/ProjectServer/services/CommentManager")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NotificationContextObject))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CommentAttachment))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(AccountSettings))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(RecentChange))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ObjectAttachment))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Announcement))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Session))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Notification))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ScheduleItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SessionLogEntry))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(AccountProfile))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(EventLogEntry))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ForumReply))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(DiscussionMessage))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingNoteItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BinaryAttachment))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingFollowupItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingAgendaItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(AccountContact))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NamedFieldCollection))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NamedFieldTemplate))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NamedTemplateFieldDefinition))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CustomField))]
public class CommentManagerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public CommentManagerService() {
        this.Url = "http://localhost:8080/ProjectServer/services/CommentManager";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://commentManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/CommentManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("addCommentReturn")]
    public int addComment(object parentObj, Comment comment) {
        object[] results = this.Invoke("addComment", new object[] {
                    parentObj,
                    comment});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddComment(object parentObj, Comment comment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addComment", new object[] {
                    parentObj,
                    comment}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndaddComment(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://commentManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/CommentManager")]
    public void dropComment(int commentId) {
        this.Invoke("dropComment", new object[] {
                    commentId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindropComment(int commentId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("dropComment", new object[] {
                    commentId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddropComment(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://commentManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/CommentManager")]
    public void modifyComment(object parentObj, Comment comment) {
        this.Invoke("modifyComment", new object[] {
                    parentObj,
                    comment});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmodifyComment(object parentObj, Comment comment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("modifyComment", new object[] {
                    parentObj,
                    comment}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndmodifyComment(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://commentManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/CommentManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getCommentsForObjectReturn")]
    public Comment[] getCommentsForObject(object parentObj) {
        object[] results = this.Invoke("getCommentsForObject", new object[] {
                    parentObj});
        return ((Comment[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCommentsForObject(object parentObj, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCommentsForObject", new object[] {
                    parentObj}, callback, asyncState);
    }
    
    /// <remarks/>
    public Comment[] EndgetCommentsForObject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Comment[])(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("NotificationContextObject", "http://roundtable.dommoni.com")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Document))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Schedule))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Forum))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Discussion))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Meeting))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Task))]
public abstract class NotificationContextObject {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Document", "http://www.dommoni.com/ROUNDTABLE")]
public class Document : NotificationContextObject {
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
    public System.Byte[] document;
    
    /// <remarks/>
    public int documentType;
    
    /// <remarks/>
    public string filename;
    
    /// <remarks/>
    public int ownerId;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Schedule", "http://www.dommoni.com/ROUNDTABLE")]
public class Schedule : NotificationContextObject {
    
    /// <remarks/>
    public int accessMode;
    
    /// <remarks/>
    public Comment[] comments;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public System.DateTime scheduleEndDate;
    
    /// <remarks/>
    public ScheduleItem[] scheduleItems;
    
    /// <remarks/>
    public System.DateTime scheduleStartDate;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Comment", "http://www.dommoni.com/ROUNDTABLE")]
public class Comment {
    
    /// <remarks/>
    public string comment;
    
    /// <remarks/>
    public string context;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int objectId;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("ScheduleItem", "http://www.dommoni.com/ROUNDTABLE")]
public class ScheduleItem {
    
    /// <remarks/>
    public Comment[] comments;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public System.Single duration;
    
    /// <remarks/>
    public System.DateTime endDate;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int ordinal;
    
    /// <remarks/>
    public int percentComplete;
    
    /// <remarks/>
    public int priority;
    
    /// <remarks/>
    public Account[] resources;
    
    /// <remarks/>
    public System.DateTime startDate;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Account", "http://www.dommoni.com/ROUNDTABLE")]
public class Account {
    
    /// <remarks/>
    public int accountType;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public string nickName;
    
    /// <remarks/>
    public string password;
    
    /// <remarks/>
    public string profile;
    
    /// <remarks/>
    public string username;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Forum", "http://www.dommoni.com/ROUNDTABLE")]
public class Forum : NotificationContextObject {
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string message;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public string subject;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Discussion", "http://www.dommoni.com/ROUNDTABLE")]
public class Discussion : NotificationContextObject {
    
    /// <remarks/>
    public System.DateTime date;
    
    /// <remarks/>
    public int[] memberIds;
    
    /// <remarks/>
    public DiscussionMessage[] messages;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("DiscussionMessage", "http://www.dommoni.com/ROUNDTABLE")]
public class DiscussionMessage {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string messageText;
    
    /// <remarks/>
    public System.DateTime timestamp;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Meeting", "http://www.dommoni.com/ROUNDTABLE")]
public class Meeting : NotificationContextObject {
    
    /// <remarks/>
    public MeetingAgendaItem[] agendaItems;
    
    /// <remarks/>
    public int[] attendees;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public System.DateTime endTime;
    
    /// <remarks/>
    public MeetingFollowupItem[] followupItems;
    
    /// <remarks/>
    public MeetingNoteItem[] meetingNotes;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public bool sendInvitation;
    
    /// <remarks/>
    public System.DateTime startTime;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("MeetingAgendaItem", "http://www.dommoni.com/ROUNDTABLE")]
public class MeetingAgendaItem {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string notes;
    
    /// <remarks/>
    public int ordinal;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("MeetingFollowupItem", "http://www.dommoni.com/ROUNDTABLE")]
public class MeetingFollowupItem {
    
    /// <remarks/>
    public int ordinal;
    
    /// <remarks/>
    public string text;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("MeetingNoteItem", "http://www.dommoni.com/ROUNDTABLE")]
public class MeetingNoteItem {
    
    /// <remarks/>
    public BinaryAttachment[] attachments;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int meetingId;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("BinaryAttachment", "http://www.dommoni.com/ROUNDTABLE")]
public class BinaryAttachment {
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
    public System.Byte[] attachment;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public string notes;
    
    /// <remarks/>
    public string objectContext;
    
    /// <remarks/>
    public int objectId;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Task", "http://www.dommoni.com/ROUNDTABLE")]
public class Task : NotificationContextObject {
    
    /// <remarks/>
    public int assignedTo;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public TaskStatus currentStatus;
    
    /// <remarks/>
    public CustomField[] customFields;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public System.DateTime dueDate;
    
    /// <remarks/>
    public int flag;
    
    /// <remarks/>
    public bool isPublic;
    
    /// <remarks/>
    public System.DateTime lastModified;
    
    /// <remarks/>
    public NamedFieldCollection[] namedFieldCollections;
    
    /// <remarks/>
    public int percentComplete;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public System.DateTime startDate;
    
    /// <remarks/>
    public TaskReminder taskReminder;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("TaskStatus", "http://www.dommoni.com/ROUNDTABLE")]
public class TaskStatus {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("CustomField", "http://www.dommoni.com/ROUNDTABLE")]
public class CustomField {
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public int ordinal;
    
    /// <remarks/>
    public int type;
    
    /// <remarks/>
    public CustomFieldValueWrapper valueWrapper;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("CustomFieldValueWrapper", "http://www.dommoni.com/ROUNDTABLE")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CustomFieldValueWrapperString))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CustomFieldValueWrapperInt))]
public abstract class CustomFieldValueWrapper {
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("CustomFieldValueWrapperString", "http://www.dommoni.com/ROUNDTABLE")]
public class CustomFieldValueWrapperString : CustomFieldValueWrapper {
    
    /// <remarks/>
    public string value;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("CustomFieldValueWrapperInt", "http://www.dommoni.com/ROUNDTABLE")]
public class CustomFieldValueWrapperInt : CustomFieldValueWrapper {
    
    /// <remarks/>
    public int value;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("NamedFieldCollection", "http://www.dommoni.com/ROUNDTABLE")]
public class NamedFieldCollection {
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public CustomField[] fields;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("TaskReminder", "http://www.dommoni.com/ROUNDTABLE")]
public class TaskReminder {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int[] recipients;
    
    /// <remarks/>
    public System.DateTime reminderTime;
    
    /// <remarks/>
    public int taskId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("CommentAttachment", "http://www.dommoni.com/ROUNDTABLE")]
public class CommentAttachment {
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
    public System.Byte[] attachement;
    
    /// <remarks/>
    public int commentId;
    
    /// <remarks/>
    public string filename;
    
    /// <remarks/>
    public int id;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("AccountSettings", "http://www.dommoni.com/ROUNDTABLE")]
public class AccountSettings {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public bool notificationsDesktopPager;
    
    /// <remarks/>
    public bool notificationsEmail;
    
    /// <remarks/>
    public bool notificationsSystemMessage;
    
    /// <remarks/>
    public string primaryEmailAddress;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("RecentChange", "http://www.dommoni.com/ROUNDTABLE")]
public class RecentChange {
    
    /// <remarks/>
    public string changeMessage;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public System.DateTime timestamp;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("ObjectAttachment", "http://www.dommoni.com/ROUNDTABLE")]
public class ObjectAttachment {
    
    /// <remarks/>
    public string attachmentObjectContext;
    
    /// <remarks/>
    public int attachmentObjectId;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public string notes;
    
    /// <remarks/>
    public string objectContext;
    
    /// <remarks/>
    public int objectId;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Announcement", "http://www.dommoni.com/ROUNDTABLE")]
public class Announcement {
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public string text;
    
    /// <remarks/>
    public string title;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Session", "http://www.dommoni.com/ROUNDTABLE")]
public class Session {
    
    /// <remarks/>
    public Account account;
    
    /// <remarks/>
    public Project currentProject;
    
    /// <remarks/>
    public System.DateTime endTime;
    
    /// <remarks/>
    public System.DateTime lastActivityTime;
    
    /// <remarks/>
    public string remoteIPAddress;
    
    /// <remarks/>
    public string sessionId;
    
    /// <remarks/>
    public System.DateTime startTime;
    
    /// <remarks/>
    public int type;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Project", "http://www.dommoni.com/ROUNDTABLE")]
public class Project {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public Account[] members;
    
    /// <remarks/>
    public string name;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Notification", "http://www.dommoni.com/ROUNDTABLE")]
public class Notification {
    
    /// <remarks/>
    public string context;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public int[] objectIds;
    
    /// <remarks/>
    public int operation;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public int type;
    
    /// <remarks/>
    public int[] userIds;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("SessionLogEntry", "http://www.dommoni.com/ROUNDTABLE")]
public class SessionLogEntry {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public System.DateTime endTime;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string remoteIpAddress;
    
    /// <remarks/>
    public string sessionId;
    
    /// <remarks/>
    public System.DateTime startTime;
    
    /// <remarks/>
    public int type;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("AccountProfile", "http://www.dommoni.com/ROUNDTABLE")]
public class AccountProfile {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public string city;
    
    /// <remarks/>
    public string emailAddress;
    
    /// <remarks/>
    public string faxNumber;
    
    /// <remarks/>
    public string homePhoneNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
    public System.Byte[] image;
    
    /// <remarks/>
    public string mailingAddress;
    
    /// <remarks/>
    public string mobilePhoneNumber;
    
    /// <remarks/>
    public string profileText;
    
    /// <remarks/>
    public string state;
    
    /// <remarks/>
    public string workPhoneNumber;
    
    /// <remarks/>
    public string zip;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("EventLogEntry", "http://www.dommoni.com/ROUNDTABLE")]
public class EventLogEntry {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public string context;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string logMessage;
    
    /// <remarks/>
    public string operationName;
    
    /// <remarks/>
    public int operationType;
    
    /// <remarks/>
    public int projectId;
    
    /// <remarks/>
    public string sessionId;
    
    /// <remarks/>
    public System.DateTime timestamp;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("ForumReply", "http://www.dommoni.com/ROUNDTABLE")]
public class ForumReply {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public int forumId;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string reply;
    
    /// <remarks/>
    public System.DateTime timestamp;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("AccountContact", "http://www.dommoni.com/ROUNDTABLE")]
public class AccountContact {
    
    /// <remarks/>
    public int accountId;
    
    /// <remarks/>
    public string city;
    
    /// <remarks/>
    public string officeAddress;
    
    /// <remarks/>
    public string phoneNumber;
    
    /// <remarks/>
    public string state;
    
    /// <remarks/>
    public string zip;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("NamedFieldTemplate", "http://www.dommoni.com/ROUNDTABLE")]
public class NamedFieldTemplate {
    
    /// <remarks/>
    public string context;
    
    /// <remarks/>
    public int createdBy;
    
    /// <remarks/>
    public System.DateTime createdOn;
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public NamedTemplateFieldDefinition[] fieldDefinitions;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public int projectId;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("NamedTemplateFieldDefinition", "http://www.dommoni.com/ROUNDTABLE")]
public class NamedTemplateFieldDefinition {
    
    /// <remarks/>
    public string description;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public int ordinal;
    
    /// <remarks/>
    public int type;
}
