//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ProjectManagerSoapBinding", Namespace="http://localhost:8080/ProjectServer/services/ProjectManager")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Account))]
public class ProjectManagerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public ProjectManagerService() {
        this.Url = "http://localhost:8080/ProjectServer/services/ProjectManager";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://projectManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ProjectManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("addProjectReturn")]
    public int addProject(Project project) {
        object[] results = this.Invoke("addProject", new object[] {
                    project});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddProject(Project project, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addProject", new object[] {
                    project}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndaddProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://projectManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ProjectManager")]
    public void dropProject(int projectId) {
        this.Invoke("dropProject", new object[] {
                    projectId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindropProject(int projectId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("dropProject", new object[] {
                    projectId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddropProject(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://projectManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ProjectManager")]
    public void modifyProject(Project project) {
        this.Invoke("modifyProject", new object[] {
                    project});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmodifyProject(Project project, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("modifyProject", new object[] {
                    project}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndmodifyProject(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://projectManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ProjectManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getProjectReturn")]
    public Project getProject(int projectId) {
        object[] results = this.Invoke("getProject", new object[] {
                    projectId});
        return ((Project)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetProject(int projectId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getProject", new object[] {
                    projectId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Project EndgetProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Project)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://projectManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ProjectManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getAllProjectsReturn")]
    public Project[] getAllProjects() {
        object[] results = this.Invoke("getAllProjects", new object[0]);
        return ((Project[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllProjects(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllProjects", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public Project[] EndgetAllProjects(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Project[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://projectManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/ProjectManager")]
    [return: System.Xml.Serialization.SoapElementAttribute("getAllProjectsForAccountReturn")]
    public Project[] getAllProjectsForAccount(int accountId) {
        object[] results = this.Invoke("getAllProjectsForAccount", new object[] {
                    accountId});
        return ((Project[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllProjectsForAccount(int accountId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllProjectsForAccount", new object[] {
                    accountId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Project[] EndgetAllProjectsForAccount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Project[])(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Project", "http://www.dommoni.com/ROUNDTABLE")]
public class Project {
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public Account[] members;
    
    /// <remarks/>
    public string name;
}

/// <remarks/>
[System.Xml.Serialization.SoapTypeAttribute("Account", "http://www.dommoni.com/ROUNDTABLE")]
public class Account {
    
    /// <remarks/>
    public int accountType;
    
    /// <remarks/>
    public int id;
    
    /// <remarks/>
    public string name;
    
    /// <remarks/>
    public string nickName;
    
    /// <remarks/>
    public string password;
    
    /// <remarks/>
    public string profile;
    
    /// <remarks/>
    public string username;
}
