//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;

using RoundTable;
using RoundTable.ProjectServer.Services.NamedFieldTemplateManager;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="NamedFieldTemplateManagerSoapBinding", Namespace="http://localhost:8080/ProjectServer/services/NamedFieldTemplateManager")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NotificationContextObject))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CommentAttachment))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(AccountSettings))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(RecentChange))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ObjectAttachment))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Announcement))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Session))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Notification))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ScheduleItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Comment))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SessionLogEntry))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(AccountProfile))]
//[System.Xml.Serialization.SoapIncludeAttribute(typeof(EventLogEntry))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ForumReply))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(DiscussionMessage))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingNoteItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BinaryAttachment))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingFollowupItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MeetingAgendaItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(AccountContact))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NamedFieldCollection))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NamedTemplateFieldDefinition))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CustomField))]
public class NamedFieldTemplateManagerService : System.Web.Services.Protocols.SoapHttpClientProtocol, INamedFieldTemplateManager
{
    public SessionHeader sessionHeader = null;

	/// <remarks/>
	public NamedFieldTemplateManagerService(string ipAddr, int port, string sessionId) 
	{
		this.Url = "http://" + ipAddr + ":" + port + "/ProjectServer/services/NamedFieldTemplateManager";
		sessionHeader = new SessionHeader();
		sessionHeader.SessionID = sessionId;
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://namedFieldTemplateManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/NamedFieldTemplateManager")]
	[SoapHeader("sessionHeader")]
	[SessionHandler()]
	[return: System.Xml.Serialization.SoapElementAttribute("addNamedFieldTemplateReturn")]
	public int addNamedFieldTemplate(Project project, object typeContext, NamedFieldTemplate template) 
	{
		object[] results = this.Invoke("addNamedFieldTemplate", new object[] {
																				 project,
																				 typeContext,
																				 template});
		return ((int)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginaddNamedFieldTemplate(Project project, object typeContext, NamedFieldTemplate template, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("addNamedFieldTemplate", new object[] {
																		  project,
																		  typeContext,
																		  template}, callback, asyncState);
	}
    
	/// <remarks/>
	public int EndaddNamedFieldTemplate(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((int)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://namedFieldTemplateManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/NamedFieldTemplateManager")]
	[SoapHeader("sessionHeader")]
	[SessionHandler()]
	public void dropNamedFieldTemplate(int namedFieldTemplateId) 
	{
		this.Invoke("dropNamedFieldTemplate", new object[] {
															   namedFieldTemplateId});
	}
    
	/// <remarks/>
	public System.IAsyncResult BegindropNamedFieldTemplate(int namedFieldTemplateId, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("dropNamedFieldTemplate", new object[] {
																		   namedFieldTemplateId}, callback, asyncState);
	}
    
	/// <remarks/>
	public void EnddropNamedFieldTemplate(System.IAsyncResult asyncResult) 
	{
		this.EndInvoke(asyncResult);
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://namedFieldTemplateManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/NamedFieldTemplateManager")]
	[SoapHeader("sessionHeader")]
	[SessionHandler()]
	public void modifyNamedFieldTemplate(NamedFieldTemplate template) 
	{
		this.Invoke("modifyNamedFieldTemplate", new object[] {
																 template});
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginmodifyNamedFieldTemplate(NamedFieldTemplate template, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("modifyNamedFieldTemplate", new object[] {
																			 template}, callback, asyncState);
	}
    
	/// <remarks/>
	public void EndmodifyNamedFieldTemplate(System.IAsyncResult asyncResult) 
	{
		this.EndInvoke(asyncResult);
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://namedFieldTemplateManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/NamedFieldTemplateManager")]
	[SoapHeader("sessionHeader")]
	[SessionHandler()]
	[return: System.Xml.Serialization.SoapElementAttribute("getNamedFieldTemplateReturn")]
	public NamedFieldTemplate getNamedFieldTemplate(int namedFieldTemplateId) 
	{
		object[] results = this.Invoke("getNamedFieldTemplate", new object[] {
																				 namedFieldTemplateId});
		return ((NamedFieldTemplate)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BegingetNamedFieldTemplate(int namedFieldTemplateId, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("getNamedFieldTemplate", new object[] {
																		  namedFieldTemplateId}, callback, asyncState);
	}
    
	/// <remarks/>
	public NamedFieldTemplate EndgetNamedFieldTemplate(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((NamedFieldTemplate)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://namedFieldTemplateManager.services.projectServer.roundtable.dommoni.com", ResponseNamespace="http://localhost:8080/ProjectServer/services/NamedFieldTemplateManager")]
	[SoapHeader("sessionHeader")]
	[SessionHandler()]
	[return: System.Xml.Serialization.SoapElementAttribute("getAllNamedFieldTemplatesForProjectAndTypeReturn")]
	public NamedFieldTemplate[] getAllNamedFieldTemplatesForProjectAndType(Project project, object typeContext) 
	{
		object[] results = this.Invoke("getAllNamedFieldTemplatesForProjectAndType", new object[] {
																									  project,
																									  typeContext});
		return ((NamedFieldTemplate[])(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BegingetAllNamedFieldTemplatesForProjectAndType(Project project, object typeContext, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("getAllNamedFieldTemplatesForProjectAndType", new object[] {
																							   project,
																							   typeContext}, callback, asyncState);
	}
    
	/// <remarks/>
	public NamedFieldTemplate[] EndgetAllNamedFieldTemplatesForProjectAndType(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((NamedFieldTemplate[])(results[0]));
	}
}
